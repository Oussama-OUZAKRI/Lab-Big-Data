version: '3'

services:  
  kafka-producer:
    build: 
      context: .
      dockerfile: Dockerfile.producer
    depends_on:
      - kafka
    volumes:
      - ./data:/app/data

  kafka-consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    depends_on:
      - kafka
  app:
    build: .
    depends_on:
      - spark-master
      - kafka
    environment:
      - SPARK_MODE=client
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
    volumes:
      - ./data:/opt/bitnami/spark/data
      - ./:/opt/bitnami/spark/work-dir

  spark-master:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./data:/opt/bitnami/spark/data
      - ./:/opt/bitnami/spark/workspace

  spark-worker:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./data:/opt/bitnami/spark/data
      - ./:/opt/bitnami/spark/workspace
    depends_on:
      - spark-master

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes  
            
  kafka:
    image: 'confluentinc/cp-kafka:7.3.0'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - 'kafka_data:/var/lib/kafka/data'
    depends_on:
      - zookeeper

volumes:
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local
